//===== Hercules Script ======================================
//= Kafra Functions
//===== By: ==================================================
//= rAthena Dev Team
//= Darlskies, Darkchild, Syrus22, Lupus, kobra_k88 (2.0)
//= L0ne_W0lf
//===== Current Version: =====================================
//= 6.9
//===== Description: =========================================
//= These functions handle save, storage, cart rental, teleport,
//= and Free Teleport/Warp/Rent Cart options for all Kafra NPCs.
//=
//= Kafra's will need a lot of work. The Welcome Message argument
//= may become obsolete, as most kafras have a slightly differing
//= Welcome message.
//===== Additional Comments: =================================
//= 1.1 Now using functions v2.1 Added Cart Rent for Classes: Whitesmith, Professor.
//=     Replaced checkoption(x) into checkcart(0) [Lupus] v2.1b Added Fix Kafra Pass Func [Kobra_k88]
//= 2.2 Final fix of the Kafra Pass Exploit! [Lupus] a -Izlude[4] fix
//= 2.2a Minor changes to function calls.  Using agruments. Added Guild options. [kobra_k88]
//= 2.2b This version uses arrays for the teleport option. Rearranged next statements to make menu transitions smoother. [kobra_k88]
//= 2.3 Removed SAVE from Niflheim. [Lupus]
//= 2.3 removed "fix" by HawkMoon RTFM and check supernovice.txt . There's a SPECIAL Kafra which gives CARTS to SN for a special proce. [Lupus]
//= 2.4 Added Baby Class Support (Baby Novice check) Removed annoying storage feature where u had to close dialog window to be able to use your storage [Lupus]
//= 2.5 Added Louyang official Kafra, fixes some Kafras, not letting you to Save your position [Lupus]
//= 2.6 Reverted Dungeons Kafras (they should offer only Storage). Added temp Ayothaya Kafra
//= 2.7 Added correct Ayothaya, Louyang & Amatsu Kafras. [Lupus]
//= 2.8 Fixed Amatsu Storage problems [Lupus] 2.9 Fixed spelling mistakes. [Nexon]
//= 3.0 Added special "not working teleport menu" for Einbroch Kafras [Lupus]
//= 3.1 Removed callfunc Is_####_Class in favor of baseClass [Silentdragon]
//= 3.2 Fixed an exploit [Lupus]
//= 4.0 Added Kafra storage password protection. [Lupus]
//=     to block Kafra Password, read comments at 350 line
//= 5.0 Fixed the close2;....close; end; lines. Who let them slip away? =/ [erKURITA]
//=     Also, the kafra upon warp was giving back the zeny. Removed. [erKURITA]
//= 5.1 Optimized a little, added no tele/save arg's [Evera]
//= 5.1a Temporary? Added F_ClearGarbage to clear unused/outdated variables [Lupus]
//= 5.2 By default commented out custom Guilds Kafra's "Guild Storage". [Lupus]
//= 5.3 uncommented Guild Storage. Confirmed kRO feature. [Lupus]
//= 5.4 added -Guide option (Kafra shows you nearest Guide) Work in progress.
//=     Need all coords for all guides.. and somehow pass their coords to kafra.
//=     Removed universal Kafra Pass, added 3 new Kafra Tickets [Lupus]
//= 5.4b temporary moved "-Guide" from the 1st menu punct [Lupus]
//= 5.5 Added proper Niflheim welcome message.	[L0ne_W0lf]
//=     Cleaned up the menus a bit. Got rid of the proceeding "-" prefix.
//= 5.5b Missed a preceeding hyphen, which was screwing up teleporting. [L0ne_W0lf]
//= 5.6 Further dialog updates, added  dynamic costs for cart and storage use. [L0ne_W0lf]
//=     Updated some functions to handle Guild Kafras the way they should.
//= 5.6a Corrected a few wrong names in the teleport function. [L0ne_W0lf]
//= 5.7 Correced end message no longer displaying, and the duplicate names [L0ne_W0lf]
//=     Thanks to Barron-Monster for pointing out the issues.
//= 5.8 Fixed another double name being shown when "saving" [L0ne_W0lf]
//= 5.9 Fixed the Kafra Welcome message for guilds. Thanks Barron-Monster. [L0ne_W0lf]
//= 6.0 Closed Kafra Password exploit in Cool Event Corp. Storages until we got a client/packet based password support.
//=     Added 2 args into F_SetKafCode to fit it in Cool Evnt Co. NPC [Lupus]
//= 6.1 Added menu for Turbo Track Kafra Staff. [L0ne_W0lf]
//= 6.2 Updated/Fixed warp cords. [Kisuka]
//= 6.3 #kafra_code is now stored as is. [brianluau]
//= 6.4 Removed unofficial Guide function. [Daegaladh]
//= 6.5 Optimized. [Joseph]
//= 6.6 Added Warp Points / View Points Function. [Joseph]
//= 6.7 Added Rune Knight Kafra. [Euphy]
//= 6.8 Improved compatibility with Zonda Staff NPCs. Modernized syntax. [Haru]
//= 6.9 kRO Official Texts. [nyalin]
//============================================================

//=== Main Function ========================================================
//=   arg(0): Used to determine which welcome message to show.
//=   arg(1): Used to determine which menu to display.
//=   arg(2): Used to determine if the info menu is shown in F_KafInfo.
//=   arg(3): Cost to use Storage
//=   arg(4): Cost to Rent a Pushcart
//==========================================================================
function	script	F_Kafra	{
	callfunc "F_ClearGarbage"; // Clear outdated, unused variables
	// Display Kafra Welcome Message
	switch (getarg(0)) {
		default:
		case 0:
			// Default message (obsolete)
			mes "[카프라 직원]";
			mes "어서오십시오. 카프라 서비스는 언제나 여러분 곁에 있습니다. 무엇을 도와드릴까요?";
			break;
		case 1:
			// Niflheim specific message
			mes "[카프라 직원]";
			mes "어서...오십시오. (주) 카프라 서비스는... 죽어서도... 여러분 곁에... 있습니다... 무엇을... 도와드릴까요?";
			break;
		case 2:
			// Guild Castle Kafra message
			@GID = getcharid(2);
			mes "[카프라 직원]";
			mes "^ff0000" + getguildname(@GID) + "^000000 길드원 여러분, 어서오십시오. 카프라 서비스는 언제나 여러분 곁에 있습니다.";
			break;
		case 3:
			// Amatsu specific message (obsolete)
			mes "[카프라 직원]";
			mes "외지인이시군요. 저희의 문화를 배우러 오신 건가요? 아니면 단순한 관광인가요?";
			mes "이 곳의 상쾌한 공기를 좀 더 즐기시면서, 천천히 머물다 가시기 바랍니다.";
			break;
		case 4:
			// Louyang and Ayothaya specific message (obsolete)
			mes "[카프라 직원]";
			mes "전 세계의 수많은 카프라 서비스와 함께라면 어딜 가시더라도 불편함이 없을 것입니다.";
			break;
		case 5:
			// NPC has it's own welcome message. (Display nothing)
			break;
	}
	next;
	while (true) {
		deletearray @K_Menu0$;
		if (getarg(0) == 2) {
			// Guild Kafra Menu override (free Teleport, free Storage, Free Cart)
			setarray @K_Menu0$[0],"창고 서비스 이용","길드 창고 서비스 이용","카트 서비스 이용","공간이동 서비스 이용","취소";
		} else {
			switch (getarg(1)) {
				// Save and Storage only
				case 1:	setarray @K_Menu0$[0],"저장 서비스 이용","창고 서비스 이용","취소"; break;
				// Storage only
				case 2:	setarray @K_Menu0$[0],"창고 서비스 이용","취소"; break;
				// No Teleport (Common)
				case 3: setarray @K_Menu0$[0],"저장 서비스 이용","창고 서비스 이용","카트 서비스 이용","기타 정보 확인","취소"; break;
				// Case 4 is Einbroch no tele message.
				// No save, or teleport. (Common)
				case 5:	setarray @K_Menu0$[0],"창고 서비스 이용","카트 서비스 이용","기타 정보 확인","취소"; break;
				// Storage and Check Other Information only.
				case 6:	setarray @K_Menu0$[0],"창고 서비스 이용","기타 정보 확인","취소"; break;
				// Save, Storage, and Pushcart only (Kafra Warehouse)
				case 7:	setarray @K_Menu0$[0],"저장 서비스 이용","창고 서비스 이용","카트 서비스 이용","취소"; break;
				// Save, Storage, Other Check information. (Turbo track)
				case 8: setarray @K_Menu0$[0],"저장 서비스 이용","창고 서비스 이용","기타 정보 확인","취소"; break;
				// No Save (Rune Knight)
				case 9: setarray @K_Menu0$[0],"창고 서비스 이용","카트 서비스 이용","공간이동 서비스 이용","기타 정보 확인","취소"; break;
				// Storage, Save, and Pushcart (Dewata, reorder of case 7)
				case 10: setarray @K_Menu0$[0],"창고 서비스 이용","저장 서비스 이용","카트 서비스 이용","취소"; break;
				// Default message (obsolete)
				default: setarray @K_Menu0$[0],"저장 서비스 이용","창고 서비스 이용","공간이동 서비스 이용","카트 서비스 이용","기타 정보 확인","취소"; break;
			}
		}
		.@menu$ = "";
		for (.@i = 0; .@i < getarraysize(@K_Menu0$); ++.@i)
			.@menu$ += @K_Menu0$[.@i] + ":";
		.@j = select(.@menu$) - 1;
		if (@K_Menu0$[.@j] == "저장 서비스 이용") {
			return;
		} else if (@K_Menu0$[.@j] == "창고 서비스 이용") {
			// Do not charge for Guild Storage
			if(getarg(0) == 2)
				callfunc "F_KafStor",2,0,0,"[카프라 직원]";
			else
				callfunc "F_KafStor",0,getarg(3),getarg(0),"[카프라 직원]";
			next;
		} else if (@K_Menu0$[.@j] == "공간이동 서비스 이용") {
			// Display Einbroch "No Teleport Service" notice.
			if (getarg(1) != 4) {
				callfunc "F_KafTele",getarg(0),"[카프라 직원]";
			} else {
				mes "[카프라 직원]";
				mes "^FF0000텔레포트 금지 조약^000000으로 인하여 카프라 서비스는 슈발츠발드 공화국 내에서는 공간이동 서비스를 더 이상 제공하지 않습니다.";
				next;
				mes "[카프라 직원]";
				mes "각 마을의 비공정을 이용해 주시기 바랍니다.";
				mes "협조해 주셔서 감사합니다.";
			}
			next;
		} else if (@K_Menu0$[.@j] == "카트 서비스 이용") {
			if(callfunc("F_KafCart",getarg(0),getarg(4),"[카프라 직원]") == 1)
				next;
		} else if (@K_Menu0$[.@j] == "기타 정보 확인") {
			callfunc "F_KafInfo",getarg(2);
			next;
		} else if (@K_Menu0$[.@j] == "취소"){
			callfunc "F_KafEnd",getarg(0),0;
			end;
		} else if (@K_Menu0$[.@j] == "길드 창고 서비스 이용") {
			callfunc "F_KafStor",1,0,0,"[카프라 직원]";
			next;
		}
	}
}

//===================================================
// Storage Function
//=   arg(0): Specifies the type of storage that has been requested:
//            0 = Regular storage
//            1 = Guild storage
//            2 = Regular storage, in a castle (free of charge)
//=   arg(1): Cost to use storage.
//=   arg(2): The type of NPC this is being called from. Notable values:
//            0,2-5 = Regular Kafra
//            1 = Niflheim Kafra (special messages)
//            6 = Zonda/Cool Event Staff (no RESRVPTS)
//=   arg(3): NPC title to display.
//===================================================
function	script	F_KafStor	{
	// Unable to access Guild Storage (Busy)
	if (getarg(0) == 1) {
		if (guildopenstorage()) {
			mes getarg(3);
			mes "죄송합니다만, 지금 다른 길드원께서 이미 길드창고를 열고 계신 중입니다.";
			mes "다른 분의 창고 이용이 끝날 때 까지 기다려 주시기 바랍니다.";
			close2;
			cutin "", 255;
			end;
		}
		cutin "", 255;
		close;
	}
	// Unable to access Normal Storage (Insufficient Basic Skills)
	if (basicskillcheck() && getskilllv(NV_BASIC) < 6) {
		mes getarg(3);
		// Niflheim Specific Message
		if (getarg(2) == 1) {
			mes "^666666죄송합니다. 고객님.";
			mes "창고를 이용하시려면 기본기능 스킬레벨을 6 이상 올리셔야 합니다....^000000";
			return;
		}
		mes "죄송합니다. 고객님.";
		mes "창고를 이용하시려면 기본기능 스킬레벨을 6 이상 올리셔야 합니다.";
		return;
	}
	// Accessing Normal Storage (Skipped if accessing Storage from Guild castle)
	if (getarg(0) != 2) {
		// Consume "Free Ticket for Kafra Storage" if available.
		if (countitem(Cargo_Free_Ticket)) {
			delitem Cargo_Free_Ticket, 1;
		} else {
			if (Zeny < getarg(1)) {
				mes getarg(3);
				// Niflheim Specific Message
				if (getarg(2) == 1) {
					percentheal -50,-50;
					mes "지불하실 금액이... 부족... 합니다. 창고 이용료는... 150 제니... 모자라면... 당신의 생명이라도... 제게... 나누어주세요...";
					return;
				}
				// Standard Message
				mes "고객님. 지불하실 금액이 부족 합니다. 창고 이용료는 "+getarg(1)+" 제니 입니다.";
				return;
			}
			Zeny -= getarg(1);
			if (getarg(2) != 6)
				RESRVPTS += getarg(1) / 5;
		}
	}

	// Surpress the "End" message if in guild castle.
	if (getarg(0) != 2) {
		if (getarg(2) == 1) {
			// Niflheim specific Message
			percentheal 0,-10;
			mes getarg(3);
			for (.@i = 0; .@i < 5; ++.@i)
				mes "^666666이용해... 주셔서... 감사합니다...^000000";
		} else if (getarg(2) == 6) {
			// Zonda
			mes getarg(3);
			mes "창고를 열겠습니다.";
			mes "이용해 주셔서 감사합니다.";
		} else {
			// Normal message
			mes getarg(3);
			mes "창고를 열겠습니다. 이용해 주셔서 감사합니다.";
		}
	}
	callfunc("F_CheckKafCode"); //check your storage password, if set
	close2;
	openstorage;
	cutin "", 255;
	end;
}

//===================================================
// Teleport Function
//=   arg(2): The type of NPC this is being called from. Notable values:
//            2 = Guild Castle Kafra (don't consume tickets)
//            6 = Zonda/Cool Event Staff (no RESRVPTS)
//=   arg(1): NPC title to display.
//===================================================
function	script	F_KafTele	{
	mes getarg(1);
	mes "목적지를 말씀해 주십시오.";
	next;
	.@menu$ = "";
	for (.@i = 0; .@i <= getarraysize(@wrpD$); ++.@i)
		.@menu$ += @wrpC$[.@i] + ":";
	.@j = select(.@menu$) - 1;
	if (@wrpC$[.@j] == "취소") {
		close2;
		cutin "", 255;
		end;
	}
	// Consume "Free Ticket for Kafra Transportation" if available.
	// Do not consume if in Guild castle
	if (countitem(Warp_Free_Ticket) > 0 && getarg(0) != 2) {
		delitem Warp_Free_Ticket, 1;
	} else {
		if (Zeny < @wrpP[.@j]) {
			mes getarg(1);
			mes "고객님. 지불하실 금액이 부족 합니다. 다시 확인해 주세요.";
			mes ""+@wrpD$[.@j]+"에 대한 비용은 "+@wrpP[.@j]+"제니입니다.";
			close2;
			cutin "", 255;
			end;
		}
		Zeny -= @wrpP[.@j];
		if (getarg(0) != 6)
			RESRVPTS += @wrpP[.@j] / 16;
	}
	cutin "", 255;
	if (@wrpD$[.@j] == "알베르타") warp "aldebaran",168,112;
	else if (@wrpD$[.@j] == "알데바란") warp "alberta", 117, 56;
	else if (@wrpD$[.@j] == "코모도") warp "comodo", 209, 143;
	else if (@wrpD$[.@j] == "파로스 등대섬") warp "cmd_fild07", 127, 134;
	else if (@wrpD$[.@j] == "게펜") warp "geffen", 120, 39;
	else if (@wrpD$[.@j] == "이즈루드") { if (RENEWAL) warp "izlude", 128, 98; else warp "izlude", 91, 105; }
	else if (@wrpD$[.@j] == "유노") warp "yuno", 158, 125;
	else if (@wrpD$[.@j] == "묘르닐 폐광 던전") warp "mjolnir_02", 99, 351;
	else if (@wrpD$[.@j] == "모로크") warp "morocc", 156, 46;
	else if (@wrpD$[.@j] == "오크 던전") warp "gef_fild10", 52, 326;
	else if (@wrpD$[.@j] == "페이욘") warp "payon", 161, 58;
	else if (@wrpD$[.@j] == "프론테라") warp "prontera", 116, 72;
	else if (@wrpD$[.@j] == "움발라") warp "umbala", 100, 154;
	else if (@wrpD$[.@j] == "베인스") warp "veins",205,101;
	else if (@wrpD$[.@j] == "라헬") warp "rachel",115,125;
	end;
}


//===================================================
// Cart Function
//=   arg(0): The type of NPC this is being called from. Notable values:
//            0,1,3-5 = Regular Kafra
//            2 = Guild Castle Kafra (don't consume tickets)
//            6 = Zonda/Cool Event Staff (no RESRVPTS)
//=   arg(1): Cost to rent a cart.
//=   arg(2): NPC title to display.
//===================================================
function	script	F_KafCart	{
	// Ensure that the class wanting to rent a pushcart is a merchant
	if (BaseClass != Job_Merchant) {
		mes getarg(2);
		mes "죄송합니다.";
		mes "카트는 상인과 블랙스미스, 알케미스트 전용입니다.";
		return 1;
	}
	if (getskilllv(MC_PUSHCART) == 0) {
		mes getarg(2);
		mes "고객님 푸시카트 스킬을 배우셔야 카트 서비스를 이용할 수 있습니다.";
		return 1;
	}
	// Make sure the invoking character does not have a cart already
	if (checkcart() == 1) {
		mes getarg(2);
		mes "고객님은 현재 카트를 이용하시고 있습니다.";
		return 1;
	}
	// Consume "Free Ticket for the Cart Service" if available.
	// Do not consume if in Guild castle.
	if (countitem(Cart_Free_Ticket) > 0 && getarg(0) != 2) {
		delitem Cart_Free_Ticket, 1;
	} else {
		mes getarg(2);
		mes "카트 이용요금은 "+getarg(1)+" 제니입니다. 카트를 대여하시겠습니까?";
		next;
		if (select("카트 서비스 이용:취소") == 2)
			return 0;
		if (Zeny < getarg(1)) {
			mes getarg(2);
			mes "고객님,돈이 충분하지 않습니다.";
			mes "이용요금은 "+getarg(1)+" 제니입니다.";
			return 1;
		}
		Zeny -= getarg(1);
		if (getarg(0) != 6)
			RESRVPTS += 48;
	}
	setcart;
	return 1;
}

//===================================================
// Special Reserve Points Function
//===================================================
function	script	F_KafInfo	{
	// Uncomment next line to block Kafra Storage Protection
	//.@block = 1;
	setarray .@m$, "적립포인트 확인","창고 비밀번호 서비스","카프라 직원 위치 확인","취소";
	if (getarg(0) == 2) deletearray .@m$[1],2; // Port Malaya, Rune Knight: remove Storage Password and Kafra Employee Locations
	else if (.@block) deletearray .@m$[1],1; // Remove Storage Password
	while (true) {
		.@j = select(implode(.@m$,":")) - 1;
		if (.@m$[.@j] == "적립포인트 확인") {
			mes "[카프라 직원]";
			mes "어디보자";
			mes "" + strcharinfo(0) + " 고객님의 적립포인트는";
			mes "^0000ff" +RESRVPTS+ "^000000점 입니다.";
			next;
			mes "[카프라 직원]";
			mes "적립포인트는 저희 카프라 본사에서 상품과 교환이 가능합니다.";
			mes "편리한 저희 카프라 서비스도 이용하시고 많은 상품도 받아가세요~";
			next;
			if(getarg(0) == 1)
				return;
		} else if (.@m$[.@j] == "카프라 직원 위치 확인") {
			for (.@i = 0; .@i <= 3; ++.@i)
				viewpoint 1,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
			next;
			for (.@i = 0; .@i <= 3; ++.@i)
				viewpoint 2,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
		} else if (.@m$[.@j] == "창고 비밀번호 서비스") {
			callfunc("F_SetKafCode","[카프라 직원]","카프라 서비스");
		} else {
			return;
		}
	}
}

// === End Function ==================================================
//  arg(0): used to determine what message to display.
//  arg(1): used to determine if save message is displayed.
//  arg(2): used to display the name of the area you're saving in.
//===================================================================
function	script	F_KafEnd	{
	mes "[카프라 직원]";
	if (getarg(1) == 1) {
		// Save
		mes "저장 되었습니다.";
		mes "이용해 주셔서 감사합니다.";
	} else if (getarg(0) == 0 || getarg(0) == 5) {
		// Generic End
		mes "이용해 주셔서 감사합니다.";
	   	mes "저희 카프라 서비스는 보다 완벽한 서비스와 엄격한 관리 업무로 고객 여러분이 안심하고 편하게 이용하실 수 있도록 최선을 다하고 있습니다.";
	} else if (getarg(0) == 1) {
		// Niflheim End
		percentheal 0,-25;
		mes "^666666저희.. 카프라 서비스는.. 언제.. 어디서나.. 고객 여러분 곁에... 있습..니다... 그러니까... 결코... 잊지 말아주세요...^000000";
		}
	close2;
	cutin "", 255;
	end;
}

//===================================================
// Check Storage Password Function
//===================================================
function	script	F_CheckKafCode	{
	if (!#kafra_code)
		return;
	mes "창고 비밀번호 입력:";
	@code_ = 0;
	input @code_;
	if (@code_ != #kafra_code) {
		dispbottom "비밀번호 오류";
		close2;
		cutin "",255;
		end;
	}
	@kafcode_try = 0;
	@code_ = 0;
	return;
}

// === Set / Change / Clear Storage Password Function ===
// getarg(0): NPC Name
// getarg(1): Company Name
//=======================================================
function	script	F_SetKafCode	{
	mes getarg(0);
	if (#kafra_code) {
		mes "창고는 현재 비밀번호로 보호되어 있습니다. 원하시는 서비스를 선택하여 주세요.";
		next;
		switch (select("비밀번호 변경 -> 5000z:비밀번호 제거 -> 1000z:취소")) {
			case 1:
				mes getarg(0);
				mes "먼저 ^0000FF현재 비밀번호^000000를 입력하여 주십시오.";
				@code = callfunc("F_EntKafCode");
				if (!@code || @code != #kafra_code) {
					mes "비밀번호가 틀렸습니다. 새로운 비밀번호를 설정할 수 없습니다.";
					emotion e_hmm;
					break;
				}
				next;
				callsub S_SET,getarg(0),getarg(1);
				break;
			case 2:
				mes getarg(0);
				mes "먼저 ^0000FF현재 비밀번호^000000를 입력하여 주십시오.";
				@code = callfunc("F_EntKafCode");
				if (!@code) {
					mes "비밀번호를 제거하지 못했습니다..";
					emotion e_hmm;
					break;
				}
				next;
				mes getarg(0);
				if (Zeny < 1000) {
					mes "고객님. 이용료가 부족합니다.";
					emotion e_cash;
					break;
				}
				Zeny -= 1000;
				if (@code == #kafra_code) {
					#kafra_code = 0;
					mes "비밀번호를 삭제하였습니다. 이용해 주셔서 감사합니다.";
					emotion e_thx;
				} else {
					mes "잘못된 비밀번호입니다.";
					mes "정확한 비밀번호를 입력해 주십시오.";
					emotion e_sry;
				}
				break;
			case 3:
				break;
		}
	} else {
		mes getarg(1)+" 를 이용해 창고를 보호하시는게 어떠세요.";
		next;
		switch (select("창고 비밀번호 만들기 -> 5000z:취소")) {
			case 1: callsub S_SET,getarg(0),getarg(1); break;
			case 2: break;
		}
	}
	close2;
	cutin "",255;
	end;

S_SET:
	mes getarg(0);
	mes "이제 ^FF0000새로운 비밀번호^000000를 입력하여 주십시오.";
	@code = callfunc("F_EntKafCode");
	if (!@code) {
		mes "창고 비밀번호가 변경되지 않았습니다.";
		emotion e_hmm;
		return;
	}
	next;
	mes getarg(0);
	if (Zeny < 5000) {
		mes "고객님. 이용료가 부족합니다.";
		emotion e_cash;
		return;
	}
	Zeny -= 5000;
	#kafra_code = @code;
	mes "고객님은 현재 창고를 비밀번호로 보호하고 계십니다.";
	mes ""+getarg(1)+"를 이용하여 주셔서 감사합니다..";
	emotion e_thx;
	return;
}

//===================================================
// Basic Password Validation Function
//===================================================
function	script	F_EntKafCode	{
	mes "1000~10000000 사이의 숫자를 입력하여 주십시오.";
	@code_ = 0;
	++@kafcode_try;
	if (@kafcode_try > 10) {
		@kafcode_try = 0;
		logmes "해킹시도 : 개인창고 열기시도";
	}
	if (input(@code_) == 1) {
		mes "너무 큰 비밀번호를 사용할 수 없습니다.";
		return 0;
	}
	if (@code_ < 1000) {
		mes "비밀번호의 길이가 너무 짧습니다.";
		return 0;
	}
	return @code_;
}

//===================================================
// Warp Points / View Points Function
//===================================================
function	script	F_KafSet	{
	deletearray @wrpC$;
	deletearray @wrpD$;
	deletearray @wrpP$;
	deletearray @viewpX;
	deletearray @viewpY;
	if (strnpcinfo(4) == "prontera") {
		setarray @wrpD$, "이즈루드", "게펜", "페이욘", "모로크", "오크 던전", "알베르타";
		setarray @wrpP, 600, 1200, 1200, 1200, 1200, 1800;
		setarray @viewpX, 151, 29, 282, 152;
		setarray @viewpY, 29, 207, 200, 326;
	} else if (strnpcinfo(4) == "alberta") {
		setarray @wrpP, 1200, 1800, 1800;
		setarray @wrpD$, "페이욘", "모로크", "프론테라";
		setarray @viewpX, 28, 113, 0, 0;
		setarray @viewpY, 229, 60, 0, 0;
	} else if (strnpcinfo(4) == "aldebaran") {
		setarray @wrpP, 1200, 1200, 1800, 1700;
		setarray @wrpD$, "게펜", "유노" , "이즈루드", "묘르닐 폐광 던전";
	} else if (strnpcinfo(4) == "comodo" ) {
		setarray @wrpD$, "모로크", "파로스 등대섬", "움발라";
		setarray @wrpP, 1800, 1200, 1800;
	} else if (strnpcinfo(4) == "cmd_fild07") {
		setarray @wrpD$, "코모도", "모로크";
		setarray @wrpP, 1200, 1200;
	} else if (strnpcinfo(4) == "geffen") {
		setarray @wrpD$, "프론테라", "알데바란", "오크 던전", "묘르닐 폐광 던전";
		setarray @wrpP, 1200, 1200, 1200, 1700;
		setarray @viewpX, 120, 203;
		setarray @viewpY, 62, 123;
	} else if (strnpcinfo(4) == "izlude") {
		setarray @wrpD$, "게펜", "페이욘", "모로크", "알데바란";
		setarray @wrpP, 1200, 1200, 1200, 1800;
	} else if (strnpcinfo(4) == "morocc") {
		setarray @wrpD$, "프론테라", "페이욘", "알베르타", "코모도", "파로스 등대섬";
		setarray @wrpP, 1200, 1200, 1800, 1800, 1200;
		setarray @viewpX, 156, 163, 28, 292;
		setarray @viewpY, 97, 260, 167, 211;
	} else if (strnpcinfo(4) == "umbala") {
		setarray @wrpD$, "코모도";
		setarray @wrpP, 1800;
	} else if (strnpcinfo(4) == "payon") {
		setarray @wrpD$, "프론테라", "알베르타", "모로크";
		setarray @wrpP, 1200, 1200, 1200;
	} else if (strnpcinfo(4) == "yuno") {
		setarray @wrpD$, "알데바란";
		setarray @wrpP, 1200;
		setarray @viewpX, 328, 278, 153, 0;
		setarray @viewpY, 108, 221, 187, 0;
	} else if (strnpcinfo(4) == "job3_rune01") {
		setarray @wrpD$, "이즈루드", "게펜", "페이욘", "모로크", "알베르타";
		setarray @wrpP, 600, 1200, 1200, 1200, 1800;
	} else if (strnpcinfo(4) == "rachel") {
		setarray @wrpD$, "베인스";
		setarray @wrpP, 2200;
	} else if (strnpcinfo(4) == "veins") {
		setarray @wrpD$, "라헬";
		setarray @wrpP, 2200;
	}
	for (.@i = 0; .@i < getarraysize(@wrpD$); ++.@i)
		@wrpC$[.@i] = @wrpD$[.@i]+" -> "+@wrpP[.@i];
	@wrpC$[getarraysize(@wrpC$)] = "취소";
	return;
}
